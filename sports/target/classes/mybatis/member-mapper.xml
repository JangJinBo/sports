<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 
		"-//mybatst.org//DTD Mapper 3.0//EN" 
		"https://mybatis.org/dtd/mybatis-3-mapper.dtd">
		
<!-- mapper의 namespace는 연결할 dao 인터페이스의 풀네임을 작성한다 -->
<mapper namespace="com.itbank.repository.MemberDAO">

<insert id="insertMember" parameterType="hashmap">
   insert into member (
      userid, 
      userpw, 
      salt, 
      nickname, 
      username, 
      pnum, 
      email, 
      memberType, 
      block
   )values (
      #{userid}, 
      #{userpw}, 
      #{salt}, 
      #{nickname}, 
      #{username}, 
      #{pnum}, 
      #{email}, 
      #{memberType}, 
      #{block}
      )
<!--    블락처리 안하면 0, 공급자 회원가입 요청 2로 함, 1은 user -->
</insert>   
<!-- 회원가입시 주소 입력 -->
<insert id="insertAddress" parameterType="hashmap">
	insert into address (
		member_idx,
		location, 
		addX, 
		addY 
	)values (
		#{member_idx},
		#{location}, 
		#{addX}, 
		#{addY}
		)
</insert>
<!-- 로그인 -->
<select id="selectOnebyId" parameterType="member" resultType="member"> 
	select * from member where userid = #{userid}
</select>
<!-- 
<select id="selectAddr" parameterType="int" resultType="address"> 
	select * from address where member_idx = #{idx}
</select> -->
<!-- 닉네임 중복 확인 -->
<select id="selectOnebyNickname" parameterType="member" resultType="member">
	select * from member where nickname = #{nickname}
</select>
<!-- 회원정보 수정 -->
<update id="updateMember" parameterType="member">
	update member set 
    	userpw = #{userpw},
	    salt = #{salt},
	    nickname = #{nickname},
	    pnum = #{pnum},
	    email =#{email}
    		where idx =#{idx}
</update>
<!-- 주소 수정 -->
<update id="updateAddr" parameterType="address">
	update address set 
	    location = #{location},
	    addX = #{addX},
	    addY = #{addY}
    		where member_idx =#{member_idx}
</update>
<!-- 멤버 최근 idx -->
<select id="maxIdx" resultType="int">
	select max(idx) from member
</select>
<!-- 회원 탈퇴 -->
<delete id="deleteMember" parameterType="int">
	delete member where idx = #{idx}
	</delete>
<!-- 멤버idx로 주소와 멤버정보 확인 -->
<select id="selectAddrByMemberIdx" parameterType="int" resultType="member">
   select 
        m.*,
      A.location as addressLocation, 
      A.idx as addressIdx
    from 
      member M 
   join address A
   on M.idx = A.member_idx
      where M.idx=#{idx} 
          AND A.idx = (SELECT MAX(idx) FROM address WHERE member_idx = M.idx AND addressType = 1)
</select>

</mapper>